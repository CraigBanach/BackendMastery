// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PersonifiBackend.Infrastructure.Data;

#nullable disable

namespace PersonifiBackend.Infrastructure.Migrations
{
    [DbContext(typeof(PersonifiDbContext))]
    [Migration("20250811203512_UpdateBudgetForMonthlyTracking")]
    partial class UpdateBudgetForMonthlyTracking
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PersonifiBackend.Core.Entities.Budget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Month")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId", "Year", "Month");

                    b.HasIndex("UserId", "CategoryId", "Year", "Month")
                        .IsUnique();

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("PersonifiBackend.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "#1a3a5f",
                            Icon = "🏠",
                            Name = "Housing",
                            Type = 1,
                            UserId = "google-oauth2|114831037037369295773"
                        },
                        new
                        {
                            Id = 2,
                            Color = "#0f8a3c",
                            Icon = "🍔",
                            Name = "Food",
                            Type = 1,
                            UserId = "google-oauth2|114831037037369295773"
                        },
                        new
                        {
                            Id = 3,
                            Color = "#c9a86e",
                            Icon = "🚗",
                            Name = "Transport",
                            Type = 1,
                            UserId = "google-oauth2|114831037037369295773"
                        },
                        new
                        {
                            Id = 4,
                            Color = "#8b5cf6",
                            Icon = "🎮",
                            Name = "Entertainment",
                            Type = 1,
                            UserId = "google-oauth2|114831037037369295773"
                        },
                        new
                        {
                            Id = 5,
                            Color = "#b54248",
                            Icon = "🛍️",
                            Name = "Shopping",
                            Type = 1,
                            UserId = "google-oauth2|114831037037369295773"
                        },
                        new
                        {
                            Id = 6,
                            Color = "#14b8a6",
                            Icon = "💡",
                            Name = "Utilities",
                            Type = 1,
                            UserId = "google-oauth2|114831037037369295773"
                        },
                        new
                        {
                            Id = 7,
                            Color = "#0f8a3c",
                            Icon = "💰",
                            Name = "Salary",
                            Type = 0,
                            UserId = "google-oauth2|114831037037369295773"
                        },
                        new
                        {
                            Id = 8,
                            Color = "#c9a86e",
                            Icon = "💼",
                            Name = "Freelance",
                            Type = 0,
                            UserId = "google-oauth2|114831037037369295773"
                        });
                });

            modelBuilder.Entity("PersonifiBackend.Core.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId", "CategoryId")
                        .HasDatabaseName("IX_Transaction_UserCategory");

                    b.HasIndex("UserId", "TransactionDate");

                    b.HasIndex("UserId", "TransactionDate", "Id")
                        .HasDatabaseName("IX_Transaction_UserDate");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("PersonifiBackend.Core.Entities.Budget", b =>
                {
                    b.HasOne("PersonifiBackend.Core.Entities.Category", "Category")
                        .WithMany("Budgets")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PersonifiBackend.Core.Entities.Transaction", b =>
                {
                    b.HasOne("PersonifiBackend.Core.Entities.Category", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PersonifiBackend.Core.Entities.Category", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
